communication protocols 
TCP transmission control protocols
TCP is a connection-oriented protocol,
UDP 
UDP is a connectionless protocol. 





A key difference between TCP and UDP is speed, 
as TCP is comparatively slower than UDP.

html , css and javascript are the 3 mosqueteros

request and response 
HTTP requests are the primary way of communicating between a client and a server. 
Once the client makes a request, the server validates the request 
and acts according to the request method delivering an HTTP response which, 
similarly to the request, contains a status line, a header, and a message body.





TCP/IP: 
Transmission Control Protocol and Internet Protocol 
are communication protocols that define how data
should travel across the internet.

DNS: 
Domain Name System is like an address book for websites. 
When you type a web address in your browser, 
the browser looks at the DNS to find the website's IP address before it can retrieve the website. The browser needs to find out which server the website lives on, 
so it can send HTTP messages to the right place.

HTTP: 
Hypertext Transfer Protocol is an application protocol that
defines a language for clients and servers to speak to each other.

Component files: 
A website is made up of many different files, 
which are like the different parts of the goods you buy from the shop. These files come in 2 main types:

Code files: 
Websites are built primarily from HTML, CSS, and JavaScript, 
though you'll meet other technologies a bit later.

Assets: 
This is a collective name for all the other stuff that makes up a website, 
such as images, music, video, Word documents, and PDFs.


TCP operates as a stream-based, 
connection-oriented protocol, prioritizing reliable delivery but incurring connection setup and retransmission costs.
UDP functions as a message-based, connectionless protocol, initiating faster but lacking guaranteed delivery.


The anticipation of multiple concurrent requests from the same client or fewer requests from numerous clients dictate the selection between multiplexing HTTP/2 or the simplicity of HTTP/1.1.
The internal architecture of web servers may vary, ranging from single to multithreaded setups, with options for single or multiple listener threads.
Each configuration offers unique approaches for accepting and distributing client connections among threads. While opting for an off-the-shelf web server confine one to its predetermined architecture, building a custom server from scratch grants 
the freedom to tailor the architecture to specific requirements.